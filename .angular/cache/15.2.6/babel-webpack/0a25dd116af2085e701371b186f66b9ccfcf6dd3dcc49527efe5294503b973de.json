{"ast":null,"code":"import { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  signup(email, password) {\n    return this.http.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCQLl1VXnIA_HXHDVU_Kb4GqrSi3w2wP0k', {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    }).pipe(catchError(errorRes => {\n      errorMes = 'An error occurred!';\n      switch (errorRes.error.error.message) {\n        case 'EMAIL_EXISTS':\n          errorMes = 'Email already exists';\n          break;\n        case 'OPERATION_NOT_ALLOWED':\n          errorMes = 'Not Allowed';\n          break;\n        case 'TOO_MANY_ATTEMPTS_TRY_LATER:':\n          errorMes = 'Too many attempts try after some time.';\n          break;\n        default:\n          error = 'An error occurred!';\n      }\n    }));\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAQ,gBAAgB;;;AAY3C,OAAM,MAAOC,WAAW;EACpBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAExB;EACAC,MAAM,CAACC,KAAa,EAAEC,QAAgB;IAClC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAmB,uGAAuG,EAC/I;MACIF,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA,QAAQ;MAClBE,iBAAiB,EAAE;KACtB,CAAC,CAACC,IAAI,CAACT,UAAU,CAACU,QAAQ,IAAE;MACzBC,QAAQ,GAAC,oBAAoB;MAC7B,QAAOD,QAAQ,CAACE,KAAK,CAACA,KAAK,CAACC,OAAO;QAC/B,KAAK,cAAc;UACfF,QAAQ,GAAG,sBAAsB;UACjC;QACJ,KAAK,uBAAuB;UACxBA,QAAQ,GAAG,aAAa;UACxB;QACJ,KAAK,8BAA8B;UAC/BA,QAAQ,GAAG,wCAAwC;UACnD;QACJ;UACIC,KAAK,GAAG,oBAAoB;MAAC;IAEzC,CAAC,CAAC,CAAC;EACP;;AA1BSX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YADC;AAAM","names":["catchError","AuthService","constructor","http","signup","email","password","post","returnSecureToken","pipe","errorRes","errorMes","error","message","factory","providedIn"],"sourceRoot":"","sources":["/home/anurag/Projects-Github/angular_projects/project/src/app/auth/auth.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { catchError } from \"rxjs/operators\";\nimport {throwError} from \"rxjs\";\n\ninterface AuthResponseData{\n    idToken: string;\n    email: string;\n    refreshToken: string;\n    expiresIn: string;\n    localId: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class AuthService{\n    constructor(private http: HttpClient){\n\n    }\n    signup(email: string, password: string){\n        return this.http.post<AuthResponseData>('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCQLl1VXnIA_HXHDVU_Kb4GqrSi3w2wP0k',\n        {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }).pipe(catchError(errorRes=>{\n            errorMes='An error occurred!';\n            switch(errorRes.error.error.message){\n                case 'EMAIL_EXISTS':\n                    errorMes = 'Email already exists';\n                    break;\n                case 'OPERATION_NOT_ALLOWED':\n                    errorMes = 'Not Allowed';\n                    break;\n                case 'TOO_MANY_ATTEMPTS_TRY_LATER:':\n                    errorMes = 'Too many attempts try after some time.';\n                    break;\n                default:\n                    error = 'An error occurred!';\n            }\n        }));\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}