{"ast":null,"code":"import { map, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../recipes/recipe.service\";\nexport class DataStorageService {\n  constructor(http, recipeService) {\n    this.http = http;\n    this.recipeService = recipeService;\n  }\n  storeRecipes() {\n    const recipes = this.recipeService.getRecipes();\n    this.http.put('https://recipe-424c6-default-rtdb.firebaseio.com/recipes.json', recipes).subscribe(response => {\n      console.log(response);\n    });\n  }\n  fetchRecipes() {\n    return this.http.get('https://recipe-424c6-default-rtdb.firebaseio.com/recipes.json').pipe(map(recipes => {\n      return recipes.map(recipe => {\n        return {\n          ...recipe,\n          ingredients: recipe.ingredients ? recipe.ingredients : []\n        };\n      });\n    }), tap(recipes => {\n      this.recipeService.setRecipes(recipes);\n    }));\n  }\n}\nDataStorageService.ɵfac = function DataStorageService_Factory(t) {\n  return new (t || DataStorageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RecipeService));\n};\nDataStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataStorageService,\n  factory: DataStorageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,GAAG,EAAEC,GAAG,QAAQ,gBAAgB;;;;AAGzC,OAAM,MAAOC,kBAAkB;EAC3BC,YAAoBC,IAAgB,EAChBC,aAA4B;IAD5B,SAAI,GAAJD,IAAI;IACJ,kBAAa,GAAbC,aAAa;EACjC;EACAC,YAAY;IACR,MAAMC,OAAO,GAAG,IAAI,CAACF,aAAa,CAACG,UAAU,EAAE;IAC/C,IAAI,CAACJ,IAAI,CACNK,GAAG,CACF,+DAA+D,EAC/DF,OAAO,CACR,CACAG,SAAS,CAACC,QAAQ,IAAG;MACpBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACzB,CAAC,CAAC;EACN;EACAG,YAAY;IACR,OAAO,IAAI,CAACV,IAAI,CACbW,GAAG,CACF,+DAA+D,CAChE,CACAC,IAAI,CACHhB,GAAG,CAACO,OAAO,IAAG;MACZ,OAAOA,OAAO,CAACP,GAAG,CAACiB,MAAM,IAAG;QAC1B,OAAO;UACL,GAAGA,MAAM;UACTC,WAAW,EAAED,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACC,WAAW,GAAG;SACxD;MACH,CAAC,CAAC;IACJ,CAAC,CAAC,EACFjB,GAAG,CAACM,OAAO,IAAG;MACZ,IAAI,CAACF,aAAa,CAACc,UAAU,CAACZ,OAAO,CAAC;IACxC,CAAC,CAAC,CACH;EACL;;AAjCOL,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAkB,SAAlBlB,kBAAkB;EAAAmB,YADL;AAAM","names":["map","tap","DataStorageService","constructor","http","recipeService","storeRecipes","recipes","getRecipes","put","subscribe","response","console","log","fetchRecipes","get","pipe","recipe","ingredients","setRecipes","factory","providedIn"],"sourceRoot":"","sources":["/home/anurag/Projects-Github/angular_projects/project/src/app/shared/data-storage.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { RecipeService } from \"../recipes/recipe.service\";\nimport { map, tap } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root'})\nexport class DataStorageService{\n    constructor(private http: HttpClient,\n                private recipeService: RecipeService) {\n    }\n    storeRecipes() {\n        const recipes = this.recipeService.getRecipes();\n        this.http\n          .put(\n            'https://recipe-424c6-default-rtdb.firebaseio.com/recipes.json',\n            recipes\n          )\n          .subscribe(response => {\n            console.log(response);\n        });\n    }\n    fetchRecipes() {\n        return this.http\n          .get<Recipe[]>(\n            'https://recipe-424c6-default-rtdb.firebaseio.com/recipes.json'\n          )\n          .pipe(\n            map(recipes => {\n              return recipes.map(recipe => {\n                return {\n                  ...recipe,\n                  ingredients: recipe.ingredients ? recipe.ingredients : []\n                };\n              });\n            }),\n            tap(recipes => {\n              this.recipeService.setRecipes(recipes);\n            })\n          )\n      }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}