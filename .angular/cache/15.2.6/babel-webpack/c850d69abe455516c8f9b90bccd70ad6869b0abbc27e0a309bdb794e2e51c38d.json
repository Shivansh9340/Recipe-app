{"ast":null,"code":"import { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../recipe.service\";\nimport * as i3 from \"@angular/forms\";\nexport class RecipeEditComponent {\n  get recipeControls() {\n    return this.recipeForm.get('ingredients').controls;\n  }\n  constructor(route, recipeService, router) {\n    this.route = route;\n    this.recipeService = recipeService;\n    this.router = router;\n    this.editMode = false;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = +params['id'];\n      this.editMode = params['id'] != null;\n      this.initForm();\n    });\n  }\n  onSubmit() {\n    // const newRecipe = new Recipe(\n    //   this.recipeForm.value['name'],\n    //   this.recipeForm.value['description'],\n    //   this.recipeForm.value['imagePath'],\n    //   this.recipeForm.value['ingredients']);\n    if (this.editMode) {\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n    } else {\n      this.recipeService.addRecipe(this.recipeForm.value);\n    }\n    this.onCancel();\n  }\n  onAddIngredient() {\n    this.recipeForm.get('ingredients').push(new FormGroup({\n      'name': new FormControl(null, Validators.required),\n      'amount': new FormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n    }));\n  }\n  onDeleteIngredient(index) {\n    this.recipeForm.get('ingredients').removeAt(index);\n  }\n  onCancel() {\n    this.router.navigate(['../'], {\n      relativeTo: this.route\n    });\n  }\n  initForm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]);\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      recipeImagePath = recipe.imagePath;\n      recipeDescription = recipe.description;\n      if (recipe['ingredients']) {\n        for (let ingredient of recipe.ingredients) {\n          recipeIngredients.push(new FormGroup({\n            'name': new FormControl(ingredient.name, Validators.required),\n            'amount': new FormControl(ingredient.amount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n          }));\n        }\n      }\n    }\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName, Validators.required),\n      'imagePath': new FormControl(recipeImagePath, Validators.required),\n      'description': new FormControl(recipeDescription, Validators.required),\n      'ingredients': recipeIngredients\n    });\n  }\n}\nRecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n  return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.RecipeService), i0.ɵɵdirectiveInject(i1.Router));\n};\nRecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecipeEditComponent,\n  selectors: [[\"app-recipe-edit\"]],\n  decls: 41,\n  vars: 1,\n  consts: [[1, \"row\"], [1, \"col-xs-12\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"imagePath\"], [\"type\", \"text\", \"id\", \"imagePath\", \"formControlName\", \"imagePath\", 1, \"form-control\"], [\"src\", \"\", 1, \"img-responsive\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"6\", 1, \"form-control\"], [1, \"col-xs-8\"], [\"type\", \"text\", 1, \"form-control\"], [1, \"col-xs-2\"], [\"type\", \"number\", 1, \"form-control\"], [1, \"btn\", \"btn-danger\"]],\n  template: function RecipeEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RecipeEditComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"button\", 3);\n      i0.ɵɵtext(6, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵtext(8, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 0)(10, \"div\", 1)(11, \"div\", 5)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 1)(17, \"div\", 5)(18, \"label\", 8);\n      i0.ɵɵtext(19, \"Image URL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 0)(22, \"div\", 1)(23, \"div\", 5);\n      i0.ɵɵelement(24, \"img\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 0)(26, \"div\", 1)(27, \"div\", 5)(28, \"label\", 11);\n      i0.ɵɵtext(29, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"textarea\", 12);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"div\", 0)(32, \"div\", 1)(33, \"div\", 0)(34, \"div\", 13);\n      i0.ɵɵelement(35, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 15);\n      i0.ɵɵelement(37, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\", 15)(39, \"button\", 17);\n      i0.ɵɵtext(40, \"X\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AAS9E,OAAM,MAAOC,mBAAmB;EAK9B,IAAIC,cAAc;IAChB,OAAQ,IAAI,CAACC,UAAU,CAACC,GAAG,CAAC,aAAa,CAAe,CAACC,QAAQ;EACnE;EAEAC,YAAoBC,KAAqB,EACrBC,aAA4B,EAC5BC,MAAc;IAFd,UAAK,GAALF,KAAK;IACL,kBAAa,GAAbC,aAAa;IACb,WAAM,GAANC,MAAM;IAT1B,aAAQ,GAAG,KAAK;EAUhB;EAEAC,QAAQ;IACN,IAAI,CAACH,KAAK,CAACI,MAAM,CACdC,SAAS,CACPD,MAAc,IAAI;MACjB,IAAI,CAACE,EAAE,GAAG,CAACF,MAAM,CAAC,IAAI,CAAC;MACvB,IAAI,CAACG,QAAQ,GAAGH,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI;MACpC,IAAI,CAACI,QAAQ,EAAE;IACjB,CAAC,CACF;EACL;EAEAC,QAAQ;IACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,CAACF,QAAQ,EAAE;MACjB,IAAI,CAACN,aAAa,CAACS,YAAY,CAAC,IAAI,CAACJ,EAAE,EAAE,IAAI,CAACV,UAAU,CAACe,KAAK,CAAC;KAChE,MAAM;MACL,IAAI,CAACV,aAAa,CAACW,SAAS,CAAC,IAAI,CAAChB,UAAU,CAACe,KAAK,CAAC;;IAErD,IAAI,CAACE,QAAQ,EAAE;EACjB;EAEAC,eAAe;IACD,IAAI,CAAClB,UAAU,CAACC,GAAG,CAAC,aAAa,CAAE,CAACkB,IAAI,CAClD,IAAIzB,SAAS,CAAC;MACZ,MAAM,EAAE,IAAIC,WAAW,CAAC,IAAI,EAAEE,UAAU,CAACuB,QAAQ,CAAC;MAClD,QAAQ,EAAE,IAAIzB,WAAW,CAAC,IAAI,EAAE,CAC9BE,UAAU,CAACuB,QAAQ,EACnBvB,UAAU,CAACwB,OAAO,CAAC,gBAAgB,CAAC,CACrC;KACF,CAAC,CACH;EACH;EAEAC,kBAAkB,CAACC,KAAa;IAClB,IAAI,CAACvB,UAAU,CAACC,GAAG,CAAC,aAAa,CAAE,CAACuB,QAAQ,CAACD,KAAK,CAAC;EACjE;EAEAN,QAAQ;IACN,IAAI,CAACX,MAAM,CAACmB,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;MAACC,UAAU,EAAE,IAAI,CAACtB;IAAK,CAAC,CAAC;EACzD;EAEQQ,QAAQ;IACd,IAAIe,UAAU,GAAG,EAAE;IACnB,IAAIC,eAAe,GAAG,EAAE;IACxB,IAAIC,iBAAiB,GAAG,EAAE;IAC1B,IAAIC,iBAAiB,GAAG,IAAIlC,SAAS,CAAC,EAAE,CAAC;IAEzC,IAAI,IAAI,CAACe,QAAQ,EAAE;MACjB,MAAMoB,MAAM,GAAG,IAAI,CAAC1B,aAAa,CAAC2B,SAAS,CAAC,IAAI,CAACtB,EAAE,CAAC;MACpDiB,UAAU,GAAGI,MAAM,CAACE,IAAI;MACxBL,eAAe,GAAGG,MAAM,CAACG,SAAS;MAClCL,iBAAiB,GAAGE,MAAM,CAACI,WAAW;MACtC,IAAIJ,MAAM,CAAC,aAAa,CAAC,EAAE;QACzB,KAAK,IAAIK,UAAU,IAAIL,MAAM,CAACM,WAAW,EAAE;UACzCP,iBAAiB,CAACX,IAAI,CACpB,IAAIzB,SAAS,CAAC;YACZ,MAAM,EAAE,IAAIC,WAAW,CAACyC,UAAU,CAACH,IAAI,EAAEpC,UAAU,CAACuB,QAAQ,CAAC;YAC7D,QAAQ,EAAE,IAAIzB,WAAW,CAACyC,UAAU,CAACE,MAAM,EAAE,CAC3CzC,UAAU,CAACuB,QAAQ,EACnBvB,UAAU,CAACwB,OAAO,CAAC,gBAAgB,CAAC,CACrC;WACF,CAAC,CACH;;;;IAKP,IAAI,CAACrB,UAAU,GAAG,IAAIN,SAAS,CAAC;MAC9B,MAAM,EAAE,IAAIC,WAAW,CAACgC,UAAU,EAAE9B,UAAU,CAACuB,QAAQ,CAAC;MACxD,WAAW,EAAE,IAAIzB,WAAW,CAACiC,eAAe,EAAE/B,UAAU,CAACuB,QAAQ,CAAC;MAClE,aAAa,EAAE,IAAIzB,WAAW,CAACkC,iBAAiB,EAAEhC,UAAU,CAACuB,QAAQ,CAAC;MACtE,aAAa,EAAEU;KAChB,CAAC;EACJ;;AA3FWhC,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAyC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXhCC,8BAAiB;MAEsBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAClDD,8BAAiB;MAEqCA,oBAAI;MAAAA,iBAAS;MAC3DA,iCAA6C;MAAAA,sBAAM;MAAAA,iBAAS;MAGpEA,8BAAiB;MAGaA,qBAAI;MAAAA,iBAAQ;MAC9BA,4BAIuB;MAC3BA,iBAAM;MAGdA,+BAAiB;MAGkBA,0BAAS;MAAAA,iBAAQ;MACxCA,4BAIuB;MAC3BA,iBAAM;MAGdA,+BAAiB;MAGLA,2BAAmC;MACvCA,iBAAM;MAGdA,+BAAiB;MAGoBA,4BAAW;MAAAA,iBAAQ;MAC5CA,gCAKsB;MAC1BA,iBAAM;MAGdA,+BAAiB;MAIDA,6BAEuB;MAC3BA,iBAAM;MACNA,gCAAsB;MAClBA,6BAEuB;MAC3BA,iBAAM;MACNA,gCAAsB;MACaA,kBAAC;MAAAA,iBAAS;;;MAjEvDA,eAAwB;MAAxBA,0CAAwB","names":["FormGroup","FormControl","FormArray","Validators","RecipeEditComponent","recipeControls","recipeForm","get","controls","constructor","route","recipeService","router","ngOnInit","params","subscribe","id","editMode","initForm","onSubmit","updateRecipe","value","addRecipe","onCancel","onAddIngredient","push","required","pattern","onDeleteIngredient","index","removeAt","navigate","relativeTo","recipeName","recipeImagePath","recipeDescription","recipeIngredients","recipe","getRecipe","name","imagePath","description","ingredient","ingredients","amount","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/anurag/angular_projects/project/src/app/recipes/recipe-edit/recipe-edit.component.ts","/home/anurag/angular_projects/project/src/app/recipes/recipe-edit/recipe-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\n\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n  id: number;\n  editMode = false;\n  recipeForm: FormGroup;\n\n  get recipeControls() {\n    return (this.recipeForm.get('ingredients') as FormArray).controls\n  }\n\n  constructor(private route: ActivatedRoute,\n              private recipeService: RecipeService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.route.params\n      .subscribe(\n        (params: Params) => {\n          this.id = +params['id'];\n          this.editMode = params['id'] != null;\n          this.initForm();\n        }\n      );\n  }\n\n  onSubmit() {\n    // const newRecipe = new Recipe(\n    //   this.recipeForm.value['name'],\n    //   this.recipeForm.value['description'],\n    //   this.recipeForm.value['imagePath'],\n    //   this.recipeForm.value['ingredients']);\n    if (this.editMode) {\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n    } else {\n      this.recipeService.addRecipe(this.recipeForm.value);\n    }\n    this.onCancel();\n  }\n\n  onAddIngredient() {\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'amount': new FormControl(null, [\n          Validators.required,\n          Validators.pattern(/^[1-9]+[0-9]*$/)\n        ])\n      })\n    );\n  }\n\n  onDeleteIngredient(index: number) {\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\n  }\n\n  onCancel() {\n    this.router.navigate(['../'], {relativeTo: this.route});\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]);\n\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      recipeImagePath = recipe.imagePath;\n      recipeDescription = recipe.description;\n      if (recipe['ingredients']) {\n        for (let ingredient of recipe.ingredients) {\n          recipeIngredients.push(\n            new FormGroup({\n              'name': new FormControl(ingredient.name, Validators.required),\n              'amount': new FormControl(ingredient.amount, [\n                Validators.required,\n                Validators.pattern(/^[1-9]+[0-9]*$/)\n              ])\n            })\n          );\n        }\n      }\n    }\n\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName, Validators.required),\n      'imagePath': new FormControl(recipeImagePath, Validators.required),\n      'description': new FormControl(recipeDescription, Validators.required),\n      'ingredients': recipeIngredients\n    });\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <button type=\"submit\" class=\"btn btn-success\">Save</button>\n                    <button type=\"button\" class=\"btn btn-danger\">Cancel</button>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Name</label>\n                        <input\n                          type=\"text\"\n                          id=\"name\"\n                          formControlName=\"name\"\n                          class=\"form-control\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label for=\"imagePath\">Image URL</label>\n                        <input\n                          type=\"text\"\n                          id=\"imagePath\"\n                          formControlName=\"imagePath\"\n                          class=\"form-control\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <img src=\"\" class=\"img-responsive\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label for=\"description\">Description</label>\n                        <textarea \n                          type=\"text\"\n                          id=\"description\"\n                          class=\"form-control\"\n                          formControlName=\"description\"\n                          rows=\"6\"></textarea>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"row\">\n                        <div class=\"col-xs-8\">\n                            <input\n                              type=\"text\"\n                              class=\"form-control\">\n                        </div>\n                        <div class=\"col-xs-2\">\n                            <input\n                              type=\"number\"\n                              class=\"form-control\">\n                        </div>\n                        <div class=\"col-xs-2\">\n                            <button class=\"btn btn-danger\">X</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}