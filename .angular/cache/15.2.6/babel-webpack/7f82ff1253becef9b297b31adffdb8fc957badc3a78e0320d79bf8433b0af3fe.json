{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TestScheduler = void 0;\nvar Observable_1 = require(\"../Observable\");\nvar ColdObservable_1 = require(\"./ColdObservable\");\nvar HotObservable_1 = require(\"./HotObservable\");\nvar SubscriptionLog_1 = require(\"./SubscriptionLog\");\nvar VirtualTimeScheduler_1 = require(\"../scheduler/VirtualTimeScheduler\");\nvar NotificationFactories_1 = require(\"../NotificationFactories\");\nvar dateTimestampProvider_1 = require(\"../scheduler/dateTimestampProvider\");\nvar performanceTimestampProvider_1 = require(\"../scheduler/performanceTimestampProvider\");\nvar animationFrameProvider_1 = require(\"../scheduler/animationFrameProvider\");\nvar immediateProvider_1 = require(\"../scheduler/immediateProvider\");\nvar intervalProvider_1 = require(\"../scheduler/intervalProvider\");\nvar timeoutProvider_1 = require(\"../scheduler/timeoutProvider\");\nvar defaultMaxFrame = 750;\nvar TestScheduler = function (_super) {\n  __extends(TestScheduler, _super);\n  function TestScheduler(assertDeepEqual) {\n    var _this = _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame) || this;\n    _this.assertDeepEqual = assertDeepEqual;\n    _this.hotObservables = [];\n    _this.coldObservables = [];\n    _this.flushTests = [];\n    _this.runMode = false;\n    return _this;\n  }\n  TestScheduler.prototype.createTime = function (marbles) {\n    var indexOf = this.runMode ? marbles.trim().indexOf('|') : marbles.indexOf('|');\n    if (indexOf === -1) {\n      throw new Error('marble diagram for time should have a completion marker \"|\"');\n    }\n    return indexOf * TestScheduler.frameTimeFactor;\n  };\n  TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\n    if (marbles.indexOf('^') !== -1) {\n      throw new Error('cold observable cannot have subscription offset \"^\"');\n    }\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('cold observable cannot have unsubscription marker \"!\"');\n    }\n    var messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n    var cold = new ColdObservable_1.ColdObservable(messages, this);\n    this.coldObservables.push(cold);\n    return cold;\n  };\n  TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('hot observable cannot have unsubscription marker \"!\"');\n    }\n    var messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n    var subject = new HotObservable_1.HotObservable(messages, this);\n    this.hotObservables.push(subject);\n    return subject;\n  };\n  TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\n    var _this = this;\n    var messages = [];\n    observable.subscribe({\n      next: function (value) {\n        messages.push({\n          frame: _this.frame - outerFrame,\n          notification: NotificationFactories_1.nextNotification(value)\n        });\n      },\n      error: function (error) {\n        messages.push({\n          frame: _this.frame - outerFrame,\n          notification: NotificationFactories_1.errorNotification(error)\n        });\n      },\n      complete: function () {\n        messages.push({\n          frame: _this.frame - outerFrame,\n          notification: NotificationFactories_1.COMPLETE_NOTIFICATION\n        });\n      }\n    });\n    return messages;\n  };\n  TestScheduler.prototype.expectObservable = function (observable, subscriptionMarbles) {\n    var _this = this;\n    if (subscriptionMarbles === void 0) {\n      subscriptionMarbles = null;\n    }\n    var actual = [];\n    var flushTest = {\n      actual: actual,\n      ready: false\n    };\n    var subscriptionParsed = TestScheduler.parseMarblesAsSubscriptions(subscriptionMarbles, this.runMode);\n    var subscriptionFrame = subscriptionParsed.subscribedFrame === Infinity ? 0 : subscriptionParsed.subscribedFrame;\n    var unsubscriptionFrame = subscriptionParsed.unsubscribedFrame;\n    var subscription;\n    this.schedule(function () {\n      subscription = observable.subscribe({\n        next: function (x) {\n          var value = x instanceof Observable_1.Observable ? _this.materializeInnerObservable(x, _this.frame) : x;\n          actual.push({\n            frame: _this.frame,\n            notification: NotificationFactories_1.nextNotification(value)\n          });\n        },\n        error: function (error) {\n          actual.push({\n            frame: _this.frame,\n            notification: NotificationFactories_1.errorNotification(error)\n          });\n        },\n        complete: function () {\n          actual.push({\n            frame: _this.frame,\n            notification: NotificationFactories_1.COMPLETE_NOTIFICATION\n          });\n        }\n      });\n    }, subscriptionFrame);\n    if (unsubscriptionFrame !== Infinity) {\n      this.schedule(function () {\n        return subscription.unsubscribe();\n      }, unsubscriptionFrame);\n    }\n    this.flushTests.push(flushTest);\n    var runMode = this.runMode;\n    return {\n      toBe: function (marbles, values, errorValue) {\n        flushTest.ready = true;\n        flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true, runMode);\n      },\n      toEqual: function (other) {\n        flushTest.ready = true;\n        flushTest.expected = [];\n        _this.schedule(function () {\n          subscription = other.subscribe({\n            next: function (x) {\n              var value = x instanceof Observable_1.Observable ? _this.materializeInnerObservable(x, _this.frame) : x;\n              flushTest.expected.push({\n                frame: _this.frame,\n                notification: NotificationFactories_1.nextNotification(value)\n              });\n            },\n            error: function (error) {\n              flushTest.expected.push({\n                frame: _this.frame,\n                notification: NotificationFactories_1.errorNotification(error)\n              });\n            },\n            complete: function () {\n              flushTest.expected.push({\n                frame: _this.frame,\n                notification: NotificationFactories_1.COMPLETE_NOTIFICATION\n              });\n            }\n          });\n        }, subscriptionFrame);\n      }\n    };\n  };\n  TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\n    var flushTest = {\n      actual: actualSubscriptionLogs,\n      ready: false\n    };\n    this.flushTests.push(flushTest);\n    var runMode = this.runMode;\n    return {\n      toBe: function (marblesOrMarblesArray) {\n        var marblesArray = typeof marblesOrMarblesArray === 'string' ? [marblesOrMarblesArray] : marblesOrMarblesArray;\n        flushTest.ready = true;\n        flushTest.expected = marblesArray.map(function (marbles) {\n          return TestScheduler.parseMarblesAsSubscriptions(marbles, runMode);\n        }).filter(function (marbles) {\n          return marbles.subscribedFrame !== Infinity;\n        });\n      }\n    };\n  };\n  TestScheduler.prototype.flush = function () {\n    var _this = this;\n    var hotObservables = this.hotObservables;\n    while (hotObservables.length > 0) {\n      hotObservables.shift().setup();\n    }\n    _super.prototype.flush.call(this);\n    this.flushTests = this.flushTests.filter(function (test) {\n      if (test.ready) {\n        _this.assertDeepEqual(test.actual, test.expected);\n        return false;\n      }\n      return true;\n    });\n  };\n  TestScheduler.parseMarblesAsSubscriptions = function (marbles, runMode) {\n    var _this = this;\n    if (runMode === void 0) {\n      runMode = false;\n    }\n    if (typeof marbles !== 'string') {\n      return new SubscriptionLog_1.SubscriptionLog(Infinity);\n    }\n    var characters = __spreadArray([], __read(marbles));\n    var len = characters.length;\n    var groupStart = -1;\n    var subscriptionFrame = Infinity;\n    var unsubscriptionFrame = Infinity;\n    var frame = 0;\n    var _loop_1 = function (i) {\n      var nextFrame = frame;\n      var advanceFrameBy = function (count) {\n        nextFrame += count * _this.frameTimeFactor;\n      };\n      var c = characters[i];\n      switch (c) {\n        case ' ':\n          if (!runMode) {\n            advanceFrameBy(1);\n          }\n          break;\n        case '-':\n          advanceFrameBy(1);\n          break;\n        case '(':\n          groupStart = frame;\n          advanceFrameBy(1);\n          break;\n        case ')':\n          groupStart = -1;\n          advanceFrameBy(1);\n          break;\n        case '^':\n          if (subscriptionFrame !== Infinity) {\n            throw new Error(\"found a second subscription point '^' in a \" + 'subscription marble diagram. There can only be one.');\n          }\n          subscriptionFrame = groupStart > -1 ? groupStart : frame;\n          advanceFrameBy(1);\n          break;\n        case '!':\n          if (unsubscriptionFrame !== Infinity) {\n            throw new Error(\"found a second unsubscription point '!' in a \" + 'subscription marble diagram. There can only be one.');\n          }\n          unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n          break;\n        default:\n          if (runMode && c.match(/^[0-9]$/)) {\n            if (i === 0 || characters[i - 1] === ' ') {\n              var buffer = characters.slice(i).join('');\n              var match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n              if (match) {\n                i += match[0].length - 1;\n                var duration = parseFloat(match[1]);\n                var unit = match[2];\n                var durationInMs = void 0;\n                switch (unit) {\n                  case 'ms':\n                    durationInMs = duration;\n                    break;\n                  case 's':\n                    durationInMs = duration * 1000;\n                    break;\n                  case 'm':\n                    durationInMs = duration * 1000 * 60;\n                    break;\n                  default:\n                    break;\n                }\n                advanceFrameBy(durationInMs / this_1.frameTimeFactor);\n                break;\n              }\n            }\n          }\n          throw new Error(\"there can only be '^' and '!' markers in a \" + \"subscription marble diagram. Found instead '\" + c + \"'.\");\n      }\n      frame = nextFrame;\n      out_i_1 = i;\n    };\n    var this_1 = this,\n      out_i_1;\n    for (var i = 0; i < len; i++) {\n      _loop_1(i);\n      i = out_i_1;\n    }\n    if (unsubscriptionFrame < 0) {\n      return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);\n    } else {\n      return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n    }\n  };\n  TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables, runMode) {\n    var _this = this;\n    if (materializeInnerObservables === void 0) {\n      materializeInnerObservables = false;\n    }\n    if (runMode === void 0) {\n      runMode = false;\n    }\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('conventional marble diagrams cannot have the ' + 'unsubscription marker \"!\"');\n    }\n    var characters = __spreadArray([], __read(marbles));\n    var len = characters.length;\n    var testMessages = [];\n    var subIndex = runMode ? marbles.replace(/^[ ]+/, '').indexOf('^') : marbles.indexOf('^');\n    var frame = subIndex === -1 ? 0 : subIndex * -this.frameTimeFactor;\n    var getValue = typeof values !== 'object' ? function (x) {\n      return x;\n    } : function (x) {\n      if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {\n        return values[x].messages;\n      }\n      return values[x];\n    };\n    var groupStart = -1;\n    var _loop_2 = function (i) {\n      var nextFrame = frame;\n      var advanceFrameBy = function (count) {\n        nextFrame += count * _this.frameTimeFactor;\n      };\n      var notification = void 0;\n      var c = characters[i];\n      switch (c) {\n        case ' ':\n          if (!runMode) {\n            advanceFrameBy(1);\n          }\n          break;\n        case '-':\n          advanceFrameBy(1);\n          break;\n        case '(':\n          groupStart = frame;\n          advanceFrameBy(1);\n          break;\n        case ')':\n          groupStart = -1;\n          advanceFrameBy(1);\n          break;\n        case '|':\n          notification = NotificationFactories_1.COMPLETE_NOTIFICATION;\n          advanceFrameBy(1);\n          break;\n        case '^':\n          advanceFrameBy(1);\n          break;\n        case '#':\n          notification = NotificationFactories_1.errorNotification(errorValue || 'error');\n          advanceFrameBy(1);\n          break;\n        default:\n          if (runMode && c.match(/^[0-9]$/)) {\n            if (i === 0 || characters[i - 1] === ' ') {\n              var buffer = characters.slice(i).join('');\n              var match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n              if (match) {\n                i += match[0].length - 1;\n                var duration = parseFloat(match[1]);\n                var unit = match[2];\n                var durationInMs = void 0;\n                switch (unit) {\n                  case 'ms':\n                    durationInMs = duration;\n                    break;\n                  case 's':\n                    durationInMs = duration * 1000;\n                    break;\n                  case 'm':\n                    durationInMs = duration * 1000 * 60;\n                    break;\n                  default:\n                    break;\n                }\n                advanceFrameBy(durationInMs / this_2.frameTimeFactor);\n                break;\n              }\n            }\n          }\n          notification = NotificationFactories_1.nextNotification(getValue(c));\n          advanceFrameBy(1);\n          break;\n      }\n      if (notification) {\n        testMessages.push({\n          frame: groupStart > -1 ? groupStart : frame,\n          notification: notification\n        });\n      }\n      frame = nextFrame;\n      out_i_2 = i;\n    };\n    var this_2 = this,\n      out_i_2;\n    for (var i = 0; i < len; i++) {\n      _loop_2(i);\n      i = out_i_2;\n    }\n    return testMessages;\n  };\n  TestScheduler.prototype.createAnimator = function () {\n    var _this = this;\n    if (!this.runMode) {\n      throw new Error('animate() must only be used in run mode');\n    }\n    var lastHandle = 0;\n    var map;\n    var delegate = {\n      requestAnimationFrame: function (callback) {\n        if (!map) {\n          throw new Error('animate() was not called within run()');\n        }\n        var handle = ++lastHandle;\n        map.set(handle, callback);\n        return handle;\n      },\n      cancelAnimationFrame: function (handle) {\n        if (!map) {\n          throw new Error('animate() was not called within run()');\n        }\n        map.delete(handle);\n      }\n    };\n    var animate = function (marbles) {\n      var e_1, _a;\n      if (map) {\n        throw new Error('animate() must not be called more than once within run()');\n      }\n      if (/[|#]/.test(marbles)) {\n        throw new Error('animate() must not complete or error');\n      }\n      map = new Map();\n      var messages = TestScheduler.parseMarbles(marbles, undefined, undefined, undefined, true);\n      try {\n        for (var messages_1 = __values(messages), messages_1_1 = messages_1.next(); !messages_1_1.done; messages_1_1 = messages_1.next()) {\n          var message = messages_1_1.value;\n          _this.schedule(function () {\n            var e_2, _a;\n            var now = _this.now();\n            var callbacks = Array.from(map.values());\n            map.clear();\n            try {\n              for (var callbacks_1 = (e_2 = void 0, __values(callbacks)), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {\n                var callback = callbacks_1_1.value;\n                callback(now);\n              }\n            } catch (e_2_1) {\n              e_2 = {\n                error: e_2_1\n              };\n            } finally {\n              try {\n                if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);\n              } finally {\n                if (e_2) throw e_2.error;\n              }\n            }\n          }, message.frame);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (messages_1_1 && !messages_1_1.done && (_a = messages_1.return)) _a.call(messages_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    };\n    return {\n      animate: animate,\n      delegate: delegate\n    };\n  };\n  TestScheduler.prototype.createDelegates = function () {\n    var _this = this;\n    var lastHandle = 0;\n    var scheduleLookup = new Map();\n    var run = function () {\n      var now = _this.now();\n      var scheduledRecords = Array.from(scheduleLookup.values());\n      var scheduledRecordsDue = scheduledRecords.filter(function (_a) {\n        var due = _a.due;\n        return due <= now;\n      });\n      var dueImmediates = scheduledRecordsDue.filter(function (_a) {\n        var type = _a.type;\n        return type === 'immediate';\n      });\n      if (dueImmediates.length > 0) {\n        var _a = dueImmediates[0],\n          handle = _a.handle,\n          handler = _a.handler;\n        scheduleLookup.delete(handle);\n        handler();\n        return;\n      }\n      var dueIntervals = scheduledRecordsDue.filter(function (_a) {\n        var type = _a.type;\n        return type === 'interval';\n      });\n      if (dueIntervals.length > 0) {\n        var firstDueInterval = dueIntervals[0];\n        var duration = firstDueInterval.duration,\n          handler = firstDueInterval.handler;\n        firstDueInterval.due = now + duration;\n        firstDueInterval.subscription = _this.schedule(run, duration);\n        handler();\n        return;\n      }\n      var dueTimeouts = scheduledRecordsDue.filter(function (_a) {\n        var type = _a.type;\n        return type === 'timeout';\n      });\n      if (dueTimeouts.length > 0) {\n        var _b = dueTimeouts[0],\n          handle = _b.handle,\n          handler = _b.handler;\n        scheduleLookup.delete(handle);\n        handler();\n        return;\n      }\n      throw new Error('Expected a due immediate or interval');\n    };\n    var immediate = {\n      setImmediate: function (handler) {\n        var handle = ++lastHandle;\n        scheduleLookup.set(handle, {\n          due: _this.now(),\n          duration: 0,\n          handle: handle,\n          handler: handler,\n          subscription: _this.schedule(run, 0),\n          type: 'immediate'\n        });\n        return handle;\n      },\n      clearImmediate: function (handle) {\n        var value = scheduleLookup.get(handle);\n        if (value) {\n          value.subscription.unsubscribe();\n          scheduleLookup.delete(handle);\n        }\n      }\n    };\n    var interval = {\n      setInterval: function (handler, duration) {\n        if (duration === void 0) {\n          duration = 0;\n        }\n        var handle = ++lastHandle;\n        scheduleLookup.set(handle, {\n          due: _this.now() + duration,\n          duration: duration,\n          handle: handle,\n          handler: handler,\n          subscription: _this.schedule(run, duration),\n          type: 'interval'\n        });\n        return handle;\n      },\n      clearInterval: function (handle) {\n        var value = scheduleLookup.get(handle);\n        if (value) {\n          value.subscription.unsubscribe();\n          scheduleLookup.delete(handle);\n        }\n      }\n    };\n    var timeout = {\n      setTimeout: function (handler, duration) {\n        if (duration === void 0) {\n          duration = 0;\n        }\n        var handle = ++lastHandle;\n        scheduleLookup.set(handle, {\n          due: _this.now() + duration,\n          duration: duration,\n          handle: handle,\n          handler: handler,\n          subscription: _this.schedule(run, duration),\n          type: 'timeout'\n        });\n        return handle;\n      },\n      clearTimeout: function (handle) {\n        var value = scheduleLookup.get(handle);\n        if (value) {\n          value.subscription.unsubscribe();\n          scheduleLookup.delete(handle);\n        }\n      }\n    };\n    return {\n      immediate: immediate,\n      interval: interval,\n      timeout: timeout\n    };\n  };\n  TestScheduler.prototype.run = function (callback) {\n    var prevFrameTimeFactor = TestScheduler.frameTimeFactor;\n    var prevMaxFrames = this.maxFrames;\n    TestScheduler.frameTimeFactor = 1;\n    this.maxFrames = Infinity;\n    this.runMode = true;\n    var animator = this.createAnimator();\n    var delegates = this.createDelegates();\n    animationFrameProvider_1.animationFrameProvider.delegate = animator.delegate;\n    dateTimestampProvider_1.dateTimestampProvider.delegate = this;\n    immediateProvider_1.immediateProvider.delegate = delegates.immediate;\n    intervalProvider_1.intervalProvider.delegate = delegates.interval;\n    timeoutProvider_1.timeoutProvider.delegate = delegates.timeout;\n    performanceTimestampProvider_1.performanceTimestampProvider.delegate = this;\n    var helpers = {\n      cold: this.createColdObservable.bind(this),\n      hot: this.createHotObservable.bind(this),\n      flush: this.flush.bind(this),\n      time: this.createTime.bind(this),\n      expectObservable: this.expectObservable.bind(this),\n      expectSubscriptions: this.expectSubscriptions.bind(this),\n      animate: animator.animate\n    };\n    try {\n      var ret = callback(helpers);\n      this.flush();\n      return ret;\n    } finally {\n      TestScheduler.frameTimeFactor = prevFrameTimeFactor;\n      this.maxFrames = prevMaxFrames;\n      this.runMode = false;\n      animationFrameProvider_1.animationFrameProvider.delegate = undefined;\n      dateTimestampProvider_1.dateTimestampProvider.delegate = undefined;\n      immediateProvider_1.immediateProvider.delegate = undefined;\n      intervalProvider_1.intervalProvider.delegate = undefined;\n      timeoutProvider_1.timeoutProvider.delegate = undefined;\n      performanceTimestampProvider_1.performanceTimestampProvider.delegate = undefined;\n    }\n  };\n  TestScheduler.frameTimeFactor = 10;\n  return TestScheduler;\n}(VirtualTimeScheduler_1.VirtualTimeScheduler);\nexports.TestScheduler = TestScheduler;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__read","o","n","m","Symbol","iterator","i","r","ar","e","next","done","push","value","error","__spreadArray","to","from","il","length","j","__values","s","defineProperty","exports","TestScheduler","Observable_1","require","ColdObservable_1","HotObservable_1","SubscriptionLog_1","VirtualTimeScheduler_1","NotificationFactories_1","dateTimestampProvider_1","performanceTimestampProvider_1","animationFrameProvider_1","immediateProvider_1","intervalProvider_1","timeoutProvider_1","defaultMaxFrame","_super","assertDeepEqual","_this","VirtualAction","hotObservables","coldObservables","flushTests","runMode","createTime","marbles","indexOf","trim","Error","frameTimeFactor","createColdObservable","values","messages","parseMarbles","undefined","cold","ColdObservable","createHotObservable","subject","HotObservable","materializeInnerObservable","observable","outerFrame","subscribe","frame","notification","nextNotification","errorNotification","complete","COMPLETE_NOTIFICATION","expectObservable","subscriptionMarbles","actual","flushTest","ready","subscriptionParsed","parseMarblesAsSubscriptions","subscriptionFrame","subscribedFrame","Infinity","unsubscriptionFrame","unsubscribedFrame","subscription","schedule","x","Observable","unsubscribe","toBe","errorValue","expected","toEqual","other","expectSubscriptions","actualSubscriptionLogs","marblesOrMarblesArray","marblesArray","map","filter","flush","shift","setup","test","SubscriptionLog","characters","len","groupStart","_loop_1","nextFrame","advanceFrameBy","count","c","match","buffer","slice","join","duration","parseFloat","unit","durationInMs","this_1","out_i_1","materializeInnerObservables","testMessages","subIndex","replace","getValue","_loop_2","this_2","out_i_2","createAnimator","lastHandle","delegate","requestAnimationFrame","callback","handle","set","cancelAnimationFrame","delete","animate","e_1","_a","Map","messages_1","messages_1_1","message","e_2","now","callbacks","clear","callbacks_1","callbacks_1_1","e_2_1","return","e_1_1","createDelegates","scheduleLookup","run","scheduledRecords","scheduledRecordsDue","due","dueImmediates","type","handler","dueIntervals","firstDueInterval","dueTimeouts","_b","immediate","setImmediate","clearImmediate","get","interval","setInterval","clearInterval","timeout","setTimeout","clearTimeout","prevFrameTimeFactor","prevMaxFrames","maxFrames","animator","delegates","animationFrameProvider","dateTimestampProvider","immediateProvider","intervalProvider","timeoutProvider","performanceTimestampProvider","helpers","bind","hot","time","ret","VirtualTimeScheduler"],"sources":["/home/shivansh/Desktop/angular/project (3)/project/node_modules/rxjs/dist/cjs/internal/testing/TestScheduler.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TestScheduler = void 0;\nvar Observable_1 = require(\"../Observable\");\nvar ColdObservable_1 = require(\"./ColdObservable\");\nvar HotObservable_1 = require(\"./HotObservable\");\nvar SubscriptionLog_1 = require(\"./SubscriptionLog\");\nvar VirtualTimeScheduler_1 = require(\"../scheduler/VirtualTimeScheduler\");\nvar NotificationFactories_1 = require(\"../NotificationFactories\");\nvar dateTimestampProvider_1 = require(\"../scheduler/dateTimestampProvider\");\nvar performanceTimestampProvider_1 = require(\"../scheduler/performanceTimestampProvider\");\nvar animationFrameProvider_1 = require(\"../scheduler/animationFrameProvider\");\nvar immediateProvider_1 = require(\"../scheduler/immediateProvider\");\nvar intervalProvider_1 = require(\"../scheduler/intervalProvider\");\nvar timeoutProvider_1 = require(\"../scheduler/timeoutProvider\");\nvar defaultMaxFrame = 750;\nvar TestScheduler = (function (_super) {\n    __extends(TestScheduler, _super);\n    function TestScheduler(assertDeepEqual) {\n        var _this = _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame) || this;\n        _this.assertDeepEqual = assertDeepEqual;\n        _this.hotObservables = [];\n        _this.coldObservables = [];\n        _this.flushTests = [];\n        _this.runMode = false;\n        return _this;\n    }\n    TestScheduler.prototype.createTime = function (marbles) {\n        var indexOf = this.runMode ? marbles.trim().indexOf('|') : marbles.indexOf('|');\n        if (indexOf === -1) {\n            throw new Error('marble diagram for time should have a completion marker \"|\"');\n        }\n        return indexOf * TestScheduler.frameTimeFactor;\n    };\n    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\n        if (marbles.indexOf('^') !== -1) {\n            throw new Error('cold observable cannot have subscription offset \"^\"');\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('cold observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n        var cold = new ColdObservable_1.ColdObservable(messages, this);\n        this.coldObservables.push(cold);\n        return cold;\n    };\n    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('hot observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n        var subject = new HotObservable_1.HotObservable(messages, this);\n        this.hotObservables.push(subject);\n        return subject;\n    };\n    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\n        var _this = this;\n        var messages = [];\n        observable.subscribe({\n            next: function (value) {\n                messages.push({ frame: _this.frame - outerFrame, notification: NotificationFactories_1.nextNotification(value) });\n            },\n            error: function (error) {\n                messages.push({ frame: _this.frame - outerFrame, notification: NotificationFactories_1.errorNotification(error) });\n            },\n            complete: function () {\n                messages.push({ frame: _this.frame - outerFrame, notification: NotificationFactories_1.COMPLETE_NOTIFICATION });\n            },\n        });\n        return messages;\n    };\n    TestScheduler.prototype.expectObservable = function (observable, subscriptionMarbles) {\n        var _this = this;\n        if (subscriptionMarbles === void 0) { subscriptionMarbles = null; }\n        var actual = [];\n        var flushTest = { actual: actual, ready: false };\n        var subscriptionParsed = TestScheduler.parseMarblesAsSubscriptions(subscriptionMarbles, this.runMode);\n        var subscriptionFrame = subscriptionParsed.subscribedFrame === Infinity ? 0 : subscriptionParsed.subscribedFrame;\n        var unsubscriptionFrame = subscriptionParsed.unsubscribedFrame;\n        var subscription;\n        this.schedule(function () {\n            subscription = observable.subscribe({\n                next: function (x) {\n                    var value = x instanceof Observable_1.Observable ? _this.materializeInnerObservable(x, _this.frame) : x;\n                    actual.push({ frame: _this.frame, notification: NotificationFactories_1.nextNotification(value) });\n                },\n                error: function (error) {\n                    actual.push({ frame: _this.frame, notification: NotificationFactories_1.errorNotification(error) });\n                },\n                complete: function () {\n                    actual.push({ frame: _this.frame, notification: NotificationFactories_1.COMPLETE_NOTIFICATION });\n                },\n            });\n        }, subscriptionFrame);\n        if (unsubscriptionFrame !== Infinity) {\n            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);\n        }\n        this.flushTests.push(flushTest);\n        var runMode = this.runMode;\n        return {\n            toBe: function (marbles, values, errorValue) {\n                flushTest.ready = true;\n                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true, runMode);\n            },\n            toEqual: function (other) {\n                flushTest.ready = true;\n                flushTest.expected = [];\n                _this.schedule(function () {\n                    subscription = other.subscribe({\n                        next: function (x) {\n                            var value = x instanceof Observable_1.Observable ? _this.materializeInnerObservable(x, _this.frame) : x;\n                            flushTest.expected.push({ frame: _this.frame, notification: NotificationFactories_1.nextNotification(value) });\n                        },\n                        error: function (error) {\n                            flushTest.expected.push({ frame: _this.frame, notification: NotificationFactories_1.errorNotification(error) });\n                        },\n                        complete: function () {\n                            flushTest.expected.push({ frame: _this.frame, notification: NotificationFactories_1.COMPLETE_NOTIFICATION });\n                        },\n                    });\n                }, subscriptionFrame);\n            },\n        };\n    };\n    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\n        var flushTest = { actual: actualSubscriptionLogs, ready: false };\n        this.flushTests.push(flushTest);\n        var runMode = this.runMode;\n        return {\n            toBe: function (marblesOrMarblesArray) {\n                var marblesArray = typeof marblesOrMarblesArray === 'string' ? [marblesOrMarblesArray] : marblesOrMarblesArray;\n                flushTest.ready = true;\n                flushTest.expected = marblesArray\n                    .map(function (marbles) { return TestScheduler.parseMarblesAsSubscriptions(marbles, runMode); })\n                    .filter(function (marbles) { return marbles.subscribedFrame !== Infinity; });\n            },\n        };\n    };\n    TestScheduler.prototype.flush = function () {\n        var _this = this;\n        var hotObservables = this.hotObservables;\n        while (hotObservables.length > 0) {\n            hotObservables.shift().setup();\n        }\n        _super.prototype.flush.call(this);\n        this.flushTests = this.flushTests.filter(function (test) {\n            if (test.ready) {\n                _this.assertDeepEqual(test.actual, test.expected);\n                return false;\n            }\n            return true;\n        });\n    };\n    TestScheduler.parseMarblesAsSubscriptions = function (marbles, runMode) {\n        var _this = this;\n        if (runMode === void 0) { runMode = false; }\n        if (typeof marbles !== 'string') {\n            return new SubscriptionLog_1.SubscriptionLog(Infinity);\n        }\n        var characters = __spreadArray([], __read(marbles));\n        var len = characters.length;\n        var groupStart = -1;\n        var subscriptionFrame = Infinity;\n        var unsubscriptionFrame = Infinity;\n        var frame = 0;\n        var _loop_1 = function (i) {\n            var nextFrame = frame;\n            var advanceFrameBy = function (count) {\n                nextFrame += count * _this.frameTimeFactor;\n            };\n            var c = characters[i];\n            switch (c) {\n                case ' ':\n                    if (!runMode) {\n                        advanceFrameBy(1);\n                    }\n                    break;\n                case '-':\n                    advanceFrameBy(1);\n                    break;\n                case '(':\n                    groupStart = frame;\n                    advanceFrameBy(1);\n                    break;\n                case ')':\n                    groupStart = -1;\n                    advanceFrameBy(1);\n                    break;\n                case '^':\n                    if (subscriptionFrame !== Infinity) {\n                        throw new Error(\"found a second subscription point '^' in a \" + 'subscription marble diagram. There can only be one.');\n                    }\n                    subscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    advanceFrameBy(1);\n                    break;\n                case '!':\n                    if (unsubscriptionFrame !== Infinity) {\n                        throw new Error(\"found a second unsubscription point '!' in a \" + 'subscription marble diagram. There can only be one.');\n                    }\n                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                default:\n                    if (runMode && c.match(/^[0-9]$/)) {\n                        if (i === 0 || characters[i - 1] === ' ') {\n                            var buffer = characters.slice(i).join('');\n                            var match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n                            if (match) {\n                                i += match[0].length - 1;\n                                var duration = parseFloat(match[1]);\n                                var unit = match[2];\n                                var durationInMs = void 0;\n                                switch (unit) {\n                                    case 'ms':\n                                        durationInMs = duration;\n                                        break;\n                                    case 's':\n                                        durationInMs = duration * 1000;\n                                        break;\n                                    case 'm':\n                                        durationInMs = duration * 1000 * 60;\n                                        break;\n                                    default:\n                                        break;\n                                }\n                                advanceFrameBy(durationInMs / this_1.frameTimeFactor);\n                                break;\n                            }\n                        }\n                    }\n                    throw new Error(\"there can only be '^' and '!' markers in a \" + \"subscription marble diagram. Found instead '\" + c + \"'.\");\n            }\n            frame = nextFrame;\n            out_i_1 = i;\n        };\n        var this_1 = this, out_i_1;\n        for (var i = 0; i < len; i++) {\n            _loop_1(i);\n            i = out_i_1;\n        }\n        if (unsubscriptionFrame < 0) {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);\n        }\n        else {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n        }\n    };\n    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables, runMode) {\n        var _this = this;\n        if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }\n        if (runMode === void 0) { runMode = false; }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('conventional marble diagrams cannot have the ' + 'unsubscription marker \"!\"');\n        }\n        var characters = __spreadArray([], __read(marbles));\n        var len = characters.length;\n        var testMessages = [];\n        var subIndex = runMode ? marbles.replace(/^[ ]+/, '').indexOf('^') : marbles.indexOf('^');\n        var frame = subIndex === -1 ? 0 : subIndex * -this.frameTimeFactor;\n        var getValue = typeof values !== 'object'\n            ? function (x) { return x; }\n            : function (x) {\n                if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {\n                    return values[x].messages;\n                }\n                return values[x];\n            };\n        var groupStart = -1;\n        var _loop_2 = function (i) {\n            var nextFrame = frame;\n            var advanceFrameBy = function (count) {\n                nextFrame += count * _this.frameTimeFactor;\n            };\n            var notification = void 0;\n            var c = characters[i];\n            switch (c) {\n                case ' ':\n                    if (!runMode) {\n                        advanceFrameBy(1);\n                    }\n                    break;\n                case '-':\n                    advanceFrameBy(1);\n                    break;\n                case '(':\n                    groupStart = frame;\n                    advanceFrameBy(1);\n                    break;\n                case ')':\n                    groupStart = -1;\n                    advanceFrameBy(1);\n                    break;\n                case '|':\n                    notification = NotificationFactories_1.COMPLETE_NOTIFICATION;\n                    advanceFrameBy(1);\n                    break;\n                case '^':\n                    advanceFrameBy(1);\n                    break;\n                case '#':\n                    notification = NotificationFactories_1.errorNotification(errorValue || 'error');\n                    advanceFrameBy(1);\n                    break;\n                default:\n                    if (runMode && c.match(/^[0-9]$/)) {\n                        if (i === 0 || characters[i - 1] === ' ') {\n                            var buffer = characters.slice(i).join('');\n                            var match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n                            if (match) {\n                                i += match[0].length - 1;\n                                var duration = parseFloat(match[1]);\n                                var unit = match[2];\n                                var durationInMs = void 0;\n                                switch (unit) {\n                                    case 'ms':\n                                        durationInMs = duration;\n                                        break;\n                                    case 's':\n                                        durationInMs = duration * 1000;\n                                        break;\n                                    case 'm':\n                                        durationInMs = duration * 1000 * 60;\n                                        break;\n                                    default:\n                                        break;\n                                }\n                                advanceFrameBy(durationInMs / this_2.frameTimeFactor);\n                                break;\n                            }\n                        }\n                    }\n                    notification = NotificationFactories_1.nextNotification(getValue(c));\n                    advanceFrameBy(1);\n                    break;\n            }\n            if (notification) {\n                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });\n            }\n            frame = nextFrame;\n            out_i_2 = i;\n        };\n        var this_2 = this, out_i_2;\n        for (var i = 0; i < len; i++) {\n            _loop_2(i);\n            i = out_i_2;\n        }\n        return testMessages;\n    };\n    TestScheduler.prototype.createAnimator = function () {\n        var _this = this;\n        if (!this.runMode) {\n            throw new Error('animate() must only be used in run mode');\n        }\n        var lastHandle = 0;\n        var map;\n        var delegate = {\n            requestAnimationFrame: function (callback) {\n                if (!map) {\n                    throw new Error('animate() was not called within run()');\n                }\n                var handle = ++lastHandle;\n                map.set(handle, callback);\n                return handle;\n            },\n            cancelAnimationFrame: function (handle) {\n                if (!map) {\n                    throw new Error('animate() was not called within run()');\n                }\n                map.delete(handle);\n            },\n        };\n        var animate = function (marbles) {\n            var e_1, _a;\n            if (map) {\n                throw new Error('animate() must not be called more than once within run()');\n            }\n            if (/[|#]/.test(marbles)) {\n                throw new Error('animate() must not complete or error');\n            }\n            map = new Map();\n            var messages = TestScheduler.parseMarbles(marbles, undefined, undefined, undefined, true);\n            try {\n                for (var messages_1 = __values(messages), messages_1_1 = messages_1.next(); !messages_1_1.done; messages_1_1 = messages_1.next()) {\n                    var message = messages_1_1.value;\n                    _this.schedule(function () {\n                        var e_2, _a;\n                        var now = _this.now();\n                        var callbacks = Array.from(map.values());\n                        map.clear();\n                        try {\n                            for (var callbacks_1 = (e_2 = void 0, __values(callbacks)), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {\n                                var callback = callbacks_1_1.value;\n                                callback(now);\n                            }\n                        }\n                        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                        finally {\n                            try {\n                                if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);\n                            }\n                            finally { if (e_2) throw e_2.error; }\n                        }\n                    }, message.frame);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (messages_1_1 && !messages_1_1.done && (_a = messages_1.return)) _a.call(messages_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        };\n        return { animate: animate, delegate: delegate };\n    };\n    TestScheduler.prototype.createDelegates = function () {\n        var _this = this;\n        var lastHandle = 0;\n        var scheduleLookup = new Map();\n        var run = function () {\n            var now = _this.now();\n            var scheduledRecords = Array.from(scheduleLookup.values());\n            var scheduledRecordsDue = scheduledRecords.filter(function (_a) {\n                var due = _a.due;\n                return due <= now;\n            });\n            var dueImmediates = scheduledRecordsDue.filter(function (_a) {\n                var type = _a.type;\n                return type === 'immediate';\n            });\n            if (dueImmediates.length > 0) {\n                var _a = dueImmediates[0], handle = _a.handle, handler = _a.handler;\n                scheduleLookup.delete(handle);\n                handler();\n                return;\n            }\n            var dueIntervals = scheduledRecordsDue.filter(function (_a) {\n                var type = _a.type;\n                return type === 'interval';\n            });\n            if (dueIntervals.length > 0) {\n                var firstDueInterval = dueIntervals[0];\n                var duration = firstDueInterval.duration, handler = firstDueInterval.handler;\n                firstDueInterval.due = now + duration;\n                firstDueInterval.subscription = _this.schedule(run, duration);\n                handler();\n                return;\n            }\n            var dueTimeouts = scheduledRecordsDue.filter(function (_a) {\n                var type = _a.type;\n                return type === 'timeout';\n            });\n            if (dueTimeouts.length > 0) {\n                var _b = dueTimeouts[0], handle = _b.handle, handler = _b.handler;\n                scheduleLookup.delete(handle);\n                handler();\n                return;\n            }\n            throw new Error('Expected a due immediate or interval');\n        };\n        var immediate = {\n            setImmediate: function (handler) {\n                var handle = ++lastHandle;\n                scheduleLookup.set(handle, {\n                    due: _this.now(),\n                    duration: 0,\n                    handle: handle,\n                    handler: handler,\n                    subscription: _this.schedule(run, 0),\n                    type: 'immediate',\n                });\n                return handle;\n            },\n            clearImmediate: function (handle) {\n                var value = scheduleLookup.get(handle);\n                if (value) {\n                    value.subscription.unsubscribe();\n                    scheduleLookup.delete(handle);\n                }\n            },\n        };\n        var interval = {\n            setInterval: function (handler, duration) {\n                if (duration === void 0) { duration = 0; }\n                var handle = ++lastHandle;\n                scheduleLookup.set(handle, {\n                    due: _this.now() + duration,\n                    duration: duration,\n                    handle: handle,\n                    handler: handler,\n                    subscription: _this.schedule(run, duration),\n                    type: 'interval',\n                });\n                return handle;\n            },\n            clearInterval: function (handle) {\n                var value = scheduleLookup.get(handle);\n                if (value) {\n                    value.subscription.unsubscribe();\n                    scheduleLookup.delete(handle);\n                }\n            },\n        };\n        var timeout = {\n            setTimeout: function (handler, duration) {\n                if (duration === void 0) { duration = 0; }\n                var handle = ++lastHandle;\n                scheduleLookup.set(handle, {\n                    due: _this.now() + duration,\n                    duration: duration,\n                    handle: handle,\n                    handler: handler,\n                    subscription: _this.schedule(run, duration),\n                    type: 'timeout',\n                });\n                return handle;\n            },\n            clearTimeout: function (handle) {\n                var value = scheduleLookup.get(handle);\n                if (value) {\n                    value.subscription.unsubscribe();\n                    scheduleLookup.delete(handle);\n                }\n            },\n        };\n        return { immediate: immediate, interval: interval, timeout: timeout };\n    };\n    TestScheduler.prototype.run = function (callback) {\n        var prevFrameTimeFactor = TestScheduler.frameTimeFactor;\n        var prevMaxFrames = this.maxFrames;\n        TestScheduler.frameTimeFactor = 1;\n        this.maxFrames = Infinity;\n        this.runMode = true;\n        var animator = this.createAnimator();\n        var delegates = this.createDelegates();\n        animationFrameProvider_1.animationFrameProvider.delegate = animator.delegate;\n        dateTimestampProvider_1.dateTimestampProvider.delegate = this;\n        immediateProvider_1.immediateProvider.delegate = delegates.immediate;\n        intervalProvider_1.intervalProvider.delegate = delegates.interval;\n        timeoutProvider_1.timeoutProvider.delegate = delegates.timeout;\n        performanceTimestampProvider_1.performanceTimestampProvider.delegate = this;\n        var helpers = {\n            cold: this.createColdObservable.bind(this),\n            hot: this.createHotObservable.bind(this),\n            flush: this.flush.bind(this),\n            time: this.createTime.bind(this),\n            expectObservable: this.expectObservable.bind(this),\n            expectSubscriptions: this.expectSubscriptions.bind(this),\n            animate: animator.animate,\n        };\n        try {\n            var ret = callback(helpers);\n            this.flush();\n            return ret;\n        }\n        finally {\n            TestScheduler.frameTimeFactor = prevFrameTimeFactor;\n            this.maxFrames = prevMaxFrames;\n            this.runMode = false;\n            animationFrameProvider_1.animationFrameProvider.delegate = undefined;\n            dateTimestampProvider_1.dateTimestampProvider.delegate = undefined;\n            immediateProvider_1.immediateProvider.delegate = undefined;\n            intervalProvider_1.intervalProvider.delegate = undefined;\n            timeoutProvider_1.timeoutProvider.delegate = undefined;\n            performanceTimestampProvider_1.performanceTimestampProvider.delegate = undefined;\n        }\n    };\n    TestScheduler.frameTimeFactor = 10;\n    return TestScheduler;\n}(VirtualTimeScheduler_1.VirtualTimeScheduler));\nexports.TestScheduler = TestScheduler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}