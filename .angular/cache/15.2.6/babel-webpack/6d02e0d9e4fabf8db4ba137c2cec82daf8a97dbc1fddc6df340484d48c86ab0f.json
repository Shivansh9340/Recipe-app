{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { exhaustMap, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport class AuthInterceptorService {\n  constructor(authservice) {\n    this.authservice = authservice;\n  }\n  intercept(req, next) {\n    this.authservice.user.pipe(take(1), exhaustMap(user => {\n      if (!user) {\n        return next.handle(req);\n      }\n      const modifiedReq = req.clone({\n        params: new HttpParams().set('auth', user.token)\n      });\n      return next.handle(modifiedReq);\n    }));\n  }\n}\nAuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n  return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.AuthService));\n};\nAuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptorService,\n  factory: AuthInterceptorService.ɵfac\n});","map":{"version":3,"mappings":"AAAA,SAA+DA,UAAU,QAAQ,sBAAsB;AAIvG,SAASC,UAAU,EAAMC,IAAI,QAAW,gBAAgB;;;AAGxD,OAAM,MAAOC,sBAAsB;EAC/BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAC/B;EACAC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,IAAI,CAACH,WAAW,CAACI,IAAI,CAACC,IAAI,CACtBR,IAAI,CAAC,CAAC,CAAC,EACPD,UAAU,CAACQ,IAAI,IAAE;MACb,IAAI,CAACA,IAAI,EAAE;QACP,OAAOD,IAAI,CAACG,MAAM,CAACJ,GAAG,CAAC;;MAEzB,MAAMK,WAAW,GAAGL,GAAG,CAACM,KAAK,CAAC;QAC5BC,MAAM,EAAE,IAAId,UAAU,EAAE,CAACe,GAAG,CAAC,MAAM,EAAEN,IAAI,CAACO,KAAK;OAChD,CAAC;MACF,OAAOR,IAAI,CAACG,MAAM,CAACC,WAAW,CAAC;IACrC,CAAC,CAAC,CAAC;EACX;;AAfST,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAc,SAAtBd,sBAAsB;AAAA","names":["HttpParams","exhaustMap","take","AuthInterceptorService","constructor","authservice","intercept","req","next","user","pipe","handle","modifiedReq","clone","params","set","token","factory"],"sourceRoot":"","sources":["/home/anurag/Projects-Github/angular_projects/project/src/app/auth/auth-interceptor.service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"./auth.service\";\nimport { exhaustMap, map,take,tap} from 'rxjs/operators';\n\n@Injectable()\nexport class AuthInterceptorService implements HttpInterceptor{\n    constructor(private authservice: AuthService){\n    }\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        this.authservice.user.pipe(\n            take(1), \n            exhaustMap(user=>{\n                if (!user) {\n                    return next.handle(req);\n                  }\n                  const modifiedReq = req.clone({\n                    params: new HttpParams().set('auth', user.token)\n                  });\n                  return next.handle(modifiedReq);\n            }));\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}