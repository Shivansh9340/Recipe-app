{"ast":null,"code":"import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport class HotObservable extends Subject {\n  constructor(messages, scheduler) {\n    super();\n    this.messages = messages;\n    this.subscriptions = [];\n    this.scheduler = scheduler;\n  }\n  _subscribe(subscriber) {\n    const subject = this;\n    const index = subject.logSubscribedFrame();\n    const subscription = new Subscription();\n    subscription.add(new Subscription(() => {\n      subject.logUnsubscribedFrame(index);\n    }));\n    subscription.add(super._subscribe(subscriber));\n    return subscription;\n  }\n  setup() {\n    const subject = this;\n    const messagesLength = subject.messages.length;\n    for (var i = 0; i < messagesLength; i++) {\n      (() => {\n        var message = subject.messages[i];\n        subject.scheduler.schedule(() => {\n          message.notification.observe(subject);\n        }, message.frame);\n      })();\n    }\n  }\n}\napplyMixins(HotObservable, [SubscriptionLoggable]);","map":{"version":3,"names":["Subject","Subscription","SubscriptionLoggable","applyMixins","HotObservable","constructor","messages","scheduler","subscriptions","_subscribe","subscriber","subject","index","logSubscribedFrame","subscription","add","logUnsubscribedFrame","setup","messagesLength","length","i","message","schedule","notification","observe","frame"],"sources":["/home/anurag/node_modules/rxjs/_esm2015/internal/testing/HotObservable.js"],"sourcesContent":["import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nexport class HotObservable extends Subject {\n    constructor(messages, scheduler) {\n        super();\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    _subscribe(subscriber) {\n        const subject = this;\n        const index = subject.logSubscribedFrame();\n        const subscription = new Subscription();\n        subscription.add(new Subscription(() => {\n            subject.logUnsubscribedFrame(index);\n        }));\n        subscription.add(super._subscribe(subscriber));\n        return subscription;\n    }\n    setup() {\n        const subject = this;\n        const messagesLength = subject.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            (() => {\n                var message = subject.messages[i];\n                subject.scheduler.schedule(() => { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    }\n}\napplyMixins(HotObservable, [SubscriptionLoggable]);\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AACpC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAO,MAAMC,aAAa,SAASJ,OAAO,CAAC;EACvCK,WAAW,CAACC,QAAQ,EAAEC,SAAS,EAAE;IAC7B,KAAK,EAAE;IACP,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACE,aAAa,GAAG,EAAE;IACvB,IAAI,CAACD,SAAS,GAAGA,SAAS;EAC9B;EACAE,UAAU,CAACC,UAAU,EAAE;IACnB,MAAMC,OAAO,GAAG,IAAI;IACpB,MAAMC,KAAK,GAAGD,OAAO,CAACE,kBAAkB,EAAE;IAC1C,MAAMC,YAAY,GAAG,IAAIb,YAAY,EAAE;IACvCa,YAAY,CAACC,GAAG,CAAC,IAAId,YAAY,CAAC,MAAM;MACpCU,OAAO,CAACK,oBAAoB,CAACJ,KAAK,CAAC;IACvC,CAAC,CAAC,CAAC;IACHE,YAAY,CAACC,GAAG,CAAC,KAAK,CAACN,UAAU,CAACC,UAAU,CAAC,CAAC;IAC9C,OAAOI,YAAY;EACvB;EACAG,KAAK,GAAG;IACJ,MAAMN,OAAO,GAAG,IAAI;IACpB,MAAMO,cAAc,GAAGP,OAAO,CAACL,QAAQ,CAACa,MAAM;IAC9C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,cAAc,EAAEE,CAAC,EAAE,EAAE;MACrC,CAAC,MAAM;QACH,IAAIC,OAAO,GAAGV,OAAO,CAACL,QAAQ,CAACc,CAAC,CAAC;QACjCT,OAAO,CAACJ,SAAS,CAACe,QAAQ,CAAC,MAAM;UAAED,OAAO,CAACE,YAAY,CAACC,OAAO,CAACb,OAAO,CAAC;QAAE,CAAC,EAAEU,OAAO,CAACI,KAAK,CAAC;MAC/F,CAAC,GAAG;IACR;EACJ;AACJ;AACAtB,WAAW,CAACC,aAAa,EAAE,CAACF,oBAAoB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}