{"ast":null,"code":"import { map, take } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, router) {\n    return this.authService.user.pipe(take(1), map(user => {\n      // return !!user;\n      const isAuth = !!user;\n      if (isAuth) {\n        return true;\n      }\n      return this.router.createUrlTree(['/auth']);\n    })\n    // ,tap(isAuth=>{\n    //     if(!isAuth){\n    //         this.router.navigate(['/auth']);\n    //     }\n    // })\n    );\n  }\n}\n\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,GAAG,EAAEC,IAAI,QAAa,MAAM;;;;AAIjD,OAAM,MAAOC,SAAS;EAClBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAU;EACtEC,WAAW,CACPC,KAA6B,EAC7BF,MAA2B;IAE3B,OAAO,IAAI,CAACD,WAAW,CAACI,IAAI,CAACC,IAAI,CAC7BR,IAAI,CAAC,CAAC,CAAC,EACPD,GAAG,CAACQ,IAAI,IAAE;MACV;MACA,MAAME,MAAM,GAAG,CAAC,CAACF,IAAI;MACrB,IAAGE,MAAM,EAAC;QACN,OAAO,IAAI;;MAEf,OAAO,IAAI,CAACL,MAAM,CAACM,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAC;IACD;IACA;IACA;IACA;IACA;IAAA,CACC;EACL;;;AAtBST,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAU,SAATV,SAAS;EAAAW,YADE;AAAM","names":["map","take","AuthGuard","constructor","authService","router","canActivate","route","user","pipe","isAuth","createUrlTree","factory","providedIn"],"sourceRoot":"","sources":["/home/anurag/Projects-Github/angular_projects/project/src/app/auth/auth.guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\nimport { Observable, map, take, tap } from \"rxjs\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable({providedIn:\"root\"})\nexport class AuthGuard{\n    constructor(private authService: AuthService, private router: Router){}\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        router: RouterStateSnapshot\n    ):boolean | Promise<boolean> | Observable<boolean | UrlTree>{\n        return this.authService.user.pipe(\n            take(1),\n            map(user=>{\n            // return !!user;\n            const isAuth = !!user\n            if(isAuth){\n                return true;\n            }\n            return this.router.createUrlTree(['/auth']);\n        })\n        // ,tap(isAuth=>{\n        //     if(!isAuth){\n        //         this.router.navigate(['/auth']);\n        //     }\n        // })\n        );\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}